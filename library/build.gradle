apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

version = '2.0'

android {
    compileSdkVersion 29
    resourcePrefix 'axcolorpicker_'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName version
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        return void
    }
    libraryVariants.all { variant ->
        task ("${variant.name}Javadoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = android.sourceSets.main.java.srcDirs
            classpath += project.files(variant.javaCompileProvider.get().classpath)
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.sourceFiles
}

task javadocJar(type: Jar, dependsOn: 'releaseJavadoc') {
    archiveClassifier.set('javadoc')
    from "$buildDir/docs/javadoc/"
}

publishing {
    publications {
        mvnBintray(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-release.aar")
            artifact javadocJar
            artifact sourcesJar
            groupId 'io.github.long76'
            artifactId 'androidxcolorpicker'
            version this.version

            pom {
                name = 'AndroidXColorPicker'
                description = 'AndroidX Color Picker'
                url = 'https://github.com/long76/AndroidXColorPicker'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/long76/AndroidXColorPicker/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'long76'
                        name = 'long76'
                        url = 'https://github.com/long76'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/long76/AndroidXColorPicker.git'
                    url = 'https://github.com/long76/AndroidXColorPicker'
                    tag = this.version
                }
            }
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mvnBintray']
    publish = true
    override = true
    pkg {
        repo = 'maven'
        name = 'AndroidXColorPicker'
        licenses = ['MIT']
        publicDownloadNumbers = true
        websiteUrl = 'https://github.com/long76/AndroidXColorPicker'
        issueTrackerUrl = 'https://github.com/long76/AndroidXColorPicker/issues'
        vcsUrl = 'https://github.com/long76/AndroidXColorPicker.git'
        githubRepo = 'long76/AndroidXColorPicker'
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
        }
    }
}